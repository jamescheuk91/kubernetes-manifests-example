#!/bin/bash

# Usage: ./gen_config ENV TEMPLATE

export ENV=$1

if [ "$ENV" == "prod" ]; then
    echo "=== ENV=${ENV} ===" >&2
    export ENDPOINT_CWP=api-cwp.1sky.io
    export ENDPOINT_INTERNAL_PORTAL=api-internal.1sky.io
    export ENDPOINT_TBACK_API=tback.1sky.io
elif [ "$ENV" == "stag" ]; then
    echo "=== ENV=${ENV} ===" >&2
    export REPLICAS=1 # dev should use 1 only, right?
    export ENDPOINT_CWP=stag-api-cwp.1sky.io
    export ENDPOINT_INTERNAL_PORTAL=stag-api-internal.1sky.io
    export ENDPOINT_TBACK_API=stag-tback.1sky.io
elif [ "$ENV" == "dev" ]; then
    echo "=== ENV=${ENV} ===" >&2
    export REPLICAS=1 # dev should use 1 only, right?
    export ENDPOINT_CWP=dev-api-cwp.1sky.io
    export ENDPOINT_INTERNAL_PORTAL=dev-api-internal.1sky.io
    export ENDPOINT_TBACK_API=dev-tback.1sky.io
elif [ "$ENV" == "default" ]; then
    echo "=== ENV=${ENV} ===" >&2
    export ENDPOINT_USER_JOURNEY=user-journey.1sky.io

else
    echo '$ENV must be prod|stag|dev|default!'
    exit 1
fi

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

$DIR/tools/templater.sh $2

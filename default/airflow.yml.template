apiVersion: v1
kind: ReplicationController
metadata:
  name: airflow-ui
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow-ui
    spec:
      containers:
      - name: airflow-ui
        image: quay.io/onesky/crawler:1.2
        command: ["bin/sh"]
        args: ["-c","ln -s /dags /usr/local/airflow/dags && airflow {{AIRFLOW_COMMAND}}"]
        resources:
          limits:
            cpu: "2"
            memory: 1Gi
          requests:
            cpu: "1"
            memory: 1Gi
        env:
        - name: REPORTINGDB_HOST
          value: TBC
        - name: COMMON_RABBITMQ_HOSTNAME
          value: TBC
        - name: COMMON_RABBITMQ_USERNAME
          value: TBC
        - name: COMMON_RABBITMQ_PASSWORD
          value: TBC
        - name: AIRFLOW__CORE__PARALLELISM
          value: "5"
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: "False"
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: TBC
        - name: AIRFLOW__CELERY__BROKER_URL
          value: TBC
        - name: AIRFLOW__CELERY__CELERY_RESULT_BACKEND
          value: TBC
        - name: PYTHONPATH
          value: /usr/src/app/mobilestore:/dags
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /dags
          name: dags
      - name: airflow-dags
        image: quay.io/onesky/airflow-dags:1.0
        command: ["/bin/sh"]
        args: ["-c","cp -R /usr/local/airflow/dags / && ls /dags && while true; do sleep 1000; done"]
        volumeMounts:
        - mountPath: /dags
          name: dags
      imagePullSecrets:
      - name: quay
      nodeSelector:
         role: kube-big-data
      volumes:
      - name: dags
        emptyDir: {}
